name: Continuous Deployment

on:
  push:
    # tags:
    #   - '**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: deploy
  cancel-in-progress: false

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Clippy
      run: cargo clippy
    - name: Build Binaries
      run: cargo build --verbose
    - name: Build Documentation
      run: cargo doc --no-deps --verbose
    - name: Test
      run: cargo test --verbose

  publish-doc:
    name: Publish Documentation
    runs-on: ubuntu-latest
    needs:
    - build-and-test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Build Documentation
      run: cargo doc --all --no-deps
    - name: Add Redirect
      run: echo '<meta http-equiv="refresh" content="0;url=pijersi_rs/index.html">' > target/doc/index.html
    - name: Upload Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: target/doc
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  publish-bin:
    name: Publish Binaries
    runs-on: ubuntu-latest
    needs:
      - build-and-test
    strategy:
      matrix:
        include:
          - name: Linux
            target: x86_64-unknown-linux-gnu
            executable: pijersi-rs
          - name: Windows
            target: x86_64-pc-windows-gnu
            executable: pijersi-rs.exe
            steps:
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Update Rustup and Install Target on ${{ matrix.name }}
      run: |
        rustup update --no-self-update stable
        rustup target add ${{ matrix.target }}
    - name: Build Binary
      run: cargo build --release --target ${{ matrix.target }}
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: target/${{ matrix.target}}/release/${{ matrix.executable }}
        
