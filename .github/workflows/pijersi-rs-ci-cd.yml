name: CI/CD

on:
  push:
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages and Releases
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: deploy
  cancel-in-progress: false

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Clippy
      run: cargo clippy
    - name: Build Binaries
      run: cargo build --release --verbose
    - name: Build Documentation
      run: cargo doc --no-deps --verbose
    - name: Test
      run: cargo test --verbose

  publish-doc:
    name: Publish Documentation
    runs-on: ubuntu-latest
    needs: build-and-test
    # Only run this job on pushes to tags
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Build Documentation
      run: cargo doc --all --no-deps
    - name: Add Redirect
      run: echo '<meta http-equiv="refresh" content="0;url=pijersi_rs/index.html">' > target/doc/index.html
    - name: Upload Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: target/doc
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-and-test
    # Only run this job on pushes to tags
    if: startsWith(github.ref, 'refs/tags/')
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          body_path: data/RELEASE_NOTES.md
          draft: false
          prerelease: false
          generate_release_notes: false

  publish-bin:
    name: Build and Publish Binaries for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    needs: create-release
    # Only run this job on pushes to tags
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        include:
          - platform: Linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            executable: pijersi-rs
            artifact-name: pijersi-rs-linux
          - platform: Windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            executable: pijersi-rs.exe
            artifact-name: pijersi-rs-win.exe
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Update Rustup and Install Target on ${{ matrix.platform }}
      run: |
        rustup update --no-self-update stable
        rustup target add ${{ matrix.target }}
    - name: Build Binary
      run: cargo build --release --target ${{ matrix.target }}
    - name: Rename binary
      run: mv target/${{ matrix.target }}/release/${{ matrix.executable }} target/${{ matrix.target }}/release/${{ matrix.artifact-name }}
    - name: Upload Artifact to Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        files: target/${{ matrix.target }}/release/${{ matrix.artifact-name }}