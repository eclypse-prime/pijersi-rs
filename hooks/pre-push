#!/bin/bash -eu

# Script to be run as part of the github pre-push hook.
#
# Checks if there is a "version-like" tag being pushed
# Then edits the version tag in Cargo.toml and commits it.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>

# Regexp use to decide if a git tag is a version label
version_tag_regexp='^v?[0-9]{1,4}\.[0-9]{1,4}(\.[0-9]{1,4})?.*'

# Create a string of '0' chars of appropriate length for the current git version
zero="$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')"

echo "Checking commits for version tags before push..."

# check all commits which we are pushing
while read local_ref local_oid remote_ref remote_oid; do
    #echo "Checking commit $local_oid ..."
    # skip ref deletions
    if [ "$local_oid" != "$zero" ]; then
        #if [ "$remote_oid" = "$zero" ]; then
        #    # 'new branch'
        #    range="$local_oid"
        #else
        #    # 'update to existing branch'
        #    range="$remote_oid..$local_oid"
        #fi
        # @todo in case we have a range (see commented out code 2 lines above), should we check more commits?
        tags="$(git tag --points-at $local_oid)"
        if [ -n "$tags" ]; then
            # @todo this will not work predictably if there are 2 version tags attached to the same commit. Which probably
            #       there should not be anyway. Should we check for that too and abort in case?
            while IFS= read -r tag; do
                echo "Found tag: '$tag'..."
                if [[ "$tag" =~ $version_tag_regexp ]]; then
                    echo "Tag looks like a version number. Changing version tag in Cargo.toml."
                    sed -i -e 's/^version = .*/version = "$tag"/' Cargo.toml
                    git add Cargo.toml
                    git commit -m "Update package version to $tag in Cargo.toml"
                    break 2; # exit from both while loops: no need to check for further tags
                fi
            done <<< "$tags"
        fi
    fi
done

exit 0