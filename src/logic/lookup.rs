//! Implements the lookup tables used for faster computations in the move generator.
//!
//! These lookup tables are used to speed up the move generator. For each cell index, the NEIGHBOURS1 and NEIGHBOURS2 tables contain the pre-calculated indices of its neighbouring cells in order to avoid calculating them every time.

use super::index::CellIndex;

/// An array associating a cell index to the indices of its 1-range neighbours.
///
/// The array is composed of 45 slices of length up to 6.
///
/// The first element of each segment is the number of neighbours of the corresponding cell.
///
/// The elements are the indices of the neighbouring cells.
pub const NEIGHBOURS1: [&[CellIndex]; 45] = [
    &[1, 6, 7],
    &[0, 2, 7, 8],
    &[1, 3, 8, 9],
    &[2, 4, 9, 10],
    &[3, 5, 10, 11],
    &[4, 11, 12],
    &[0, 7, 13],
    &[0, 1, 6, 8, 13, 14],
    &[1, 2, 7, 9, 14, 15],
    &[2, 3, 8, 10, 15, 16],
    &[3, 4, 9, 11, 16, 17],
    &[4, 5, 10, 12, 17, 18],
    &[5, 11, 18],
    &[6, 7, 14, 19, 20],
    &[7, 8, 13, 15, 20, 21],
    &[8, 9, 14, 16, 21, 22],
    &[9, 10, 15, 17, 22, 23],
    &[10, 11, 16, 18, 23, 24],
    &[11, 12, 17, 24, 25],
    &[13, 20, 26],
    &[13, 14, 19, 21, 26, 27],
    &[14, 15, 20, 22, 27, 28],
    &[15, 16, 21, 23, 28, 29],
    &[16, 17, 22, 24, 29, 30],
    &[17, 18, 23, 25, 30, 31],
    &[18, 24, 31],
    &[19, 20, 27, 32, 33],
    &[20, 21, 26, 28, 33, 34],
    &[21, 22, 27, 29, 34, 35],
    &[22, 23, 28, 30, 35, 36],
    &[23, 24, 29, 31, 36, 37],
    &[24, 25, 30, 37, 38],
    &[26, 33, 39],
    &[26, 27, 32, 34, 39, 40],
    &[27, 28, 33, 35, 40, 41],
    &[28, 29, 34, 36, 41, 42],
    &[29, 30, 35, 37, 42, 43],
    &[30, 31, 36, 38, 43, 44],
    &[31, 37, 44],
    &[32, 33, 40],
    &[33, 34, 39, 41],
    &[34, 35, 40, 42],
    &[35, 36, 41, 43],
    &[36, 37, 42, 44],
    &[37, 38, 43],
];
/// An array associating a cell index to the indices of its 2-range neighbours.
///
/// The array is composed of 45 slices of length up to 6.
///
/// The elements are the indices of the neighbouring cells.
pub const NEIGHBOURS2: [&[CellIndex]; 45] = [
    &[2, 14],
    &[3, 13, 15],
    &[0, 4, 14, 16],
    &[1, 5, 15, 17],
    &[2, 16, 18],
    &[3, 17],
    &[8, 20],
    &[9, 19, 21],
    &[6, 10, 20, 22],
    &[7, 11, 21, 23],
    &[8, 12, 22, 24],
    &[9, 23, 25],
    &[10, 24],
    &[1, 15, 27],
    &[0, 2, 16, 26, 28],
    &[1, 3, 13, 17, 27, 29],
    &[2, 4, 14, 18, 28, 30],
    &[3, 5, 15, 29, 31],
    &[4, 16, 30],
    &[7, 21, 33],
    &[6, 8, 22, 32, 34],
    &[7, 9, 19, 23, 33, 35],
    &[8, 10, 20, 24, 34, 36],
    &[9, 11, 21, 25, 35, 37],
    &[10, 12, 22, 36, 38],
    &[11, 23, 37],
    &[14, 28, 40],
    &[13, 15, 29, 39, 41],
    &[14, 16, 26, 30, 40, 42],
    &[15, 17, 27, 31, 41, 43],
    &[16, 18, 28, 42, 44],
    &[17, 29, 43],
    &[20, 34],
    &[19, 21, 35],
    &[20, 22, 32, 36],
    &[21, 23, 33, 37],
    &[22, 24, 34, 38],
    &[23, 25, 35],
    &[24, 36],
    &[27, 41],
    &[26, 28, 42],
    &[27, 29, 39, 43],
    &[28, 30, 40, 44],
    &[29, 31, 41],
    &[30, 42],
];

/// Associates a piece's u8 representation to an index that can be used in other lookup tables
pub const PIECE_TO_INDEX: [usize; 256] = [
    34, 13, 34, 30, 34, 14, 34, 31, 34, 15, 34, 32, 34, 16, 34, 33, 34, 0, 34, 34, 34, 1, 34, 34,
    34, 2, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
    34, 34, 34, 17, 34, 34, 34, 18, 34, 34, 34, 19, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
    34, 34, 34, 34, 34, 34, 34, 34, 34, 3, 34, 34, 34, 4, 34, 34, 34, 5, 34, 34, 34, 34, 34, 34,
    34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 20, 34, 34, 34, 21,
    34, 34, 34, 22, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
    34, 6, 34, 34, 34, 7, 34, 34, 34, 8, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
    34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 23, 34, 34, 34, 24, 34, 34, 34, 25, 34, 34, 34, 34,
    34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 9, 34, 34, 34, 10, 34, 34,
    34, 11, 34, 34, 34, 12, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
    34, 34, 34, 26, 34, 34, 34, 27, 34, 34, 34, 28, 34, 34, 34, 29,
];
